name: build and push container image

on:
  workflow_call:
    inputs:
      image-name:
        description: image name
        type: string
        required: true
      context-directory:
        description: context directory
        type: string
        required: true

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}/${{ inputs.image-name }}

jobs:
  meta-data:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
    outputs:
      tags: ${{ steps.docker-metadata.outputs.tags }}
      labels: ${{ steps.docker-metadata.outputs.labels }}
      # デフォルトブランチかタグの時のみPUSHする
      push: ${{ github.event_name != 'pull_request' && ( github.ref_name == github.event.repository.default_branch || github.ref_type == 'tag' ) }}

    steps:
      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: docker-metadata
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81 # v5.5.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=${{ github.event.repository.default_branch }},enable={{is_default_branch}}
            type=ref,priority=100,event=tag
            type=sha,priority=400,format=short
            type=sha,priority=500,format=short,suffix=-{{date 'YYYYMMDDTHHmmss[Z]'}}

  build-push:
    needs:
      - meta-data
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Collect Workflow Telemetry
        uses: catchpoint/workflow-telemetry-action@94c3c3d9567a0205de6da68a76c428ce4e769af1 # v2.0.0

      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3.0.0

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@0d103c3126aa41d772a8362f6aa67afac040f80c # v3.1.0

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: needs.meta-data.outputs.push == 'true'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56 # v5.1.0
        with:
          context: ./${{ inputs.context-directory }}
          platforms: linux/amd64,linux/arm64/v8
          tags: ${{ needs.meta-data.outputs.tags }}
          labels: ${{ needs.meta-data.outputs.labels }}
          outputs: ${{ needs.meta-data.outputs.push == 'true' && 'type=registry' || 'type=oci,dest=/tmp/image.tar' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  action-timeline:
    needs:
      - build-push
    # Runs even when the previous job was in error
    if: ${{ always() }}
    continue-on-error: true
    runs-on: ubuntu-22.04
    permissions:
      actions: read
    timeout-minutes: 10
    steps:
      - uses: Kesin11/actions-timeline@b03a6aa289adef5534c84ccb6fbef7c975973574 # v2.1.0
